/**
 ********************************
 * _HEADINGS.SCSS
 ********************************
 */

/**
 * @settings $gemini-headings
 * @description The size of headings based on:
 * http://alistapart.com/article/more-meaningful-typography
 * http://typecast.com/blog/contrast-through-scale
 *
 * @prop {number} [line-height=1.3]          Line-height for headings
 * @prop {boolean} [responsive=false]        Use responsive helpers
 * @prop {number} [giga=font-size * 6.5]     Giga sized fonts
 * @prop {number} [mega=font-size * 5]       Mega sized fonts
 * @prop {number} [kilo=font-size * 4]       Kilo sized fonts
 * @prop {number} [alpha=font-size * 3.33]   h1 sized fonts
 * @prop {number} [beta=font-size * 2.66]    h2 sized fonts
 * @prop {number} [gamma=font-size * 2]      h3 sized fonts
 * @prop {number} [delta=font-size * 1.33]   h4 sized fonts
 * @prop {number} [epsilon=font-size * 1.16] h5 sized fonts
 * @prop {number} [zeta=font-size * 1]       Giga h6 fonts
 * @prop {number} [milli=font-size * 0.83]   Milli sized fonts
 * @prop {number} [micro=font-size * 0.75]   Micro sized fonts
 */
$gemini-headings: () !default;

$gemini-headings: extend((
  giga:        get(font-size) * 6.5,
  mega:        get(font-size) * 5,
  kilo:        get(font-size) * 4,

  alpha:       get(font-size) * 3.3333,
  beta:        get(font-size) * 2.6667,
  gamma:       get(font-size) * 2,
  delta:       get(font-size) * 1.3333,
  epsilon:     get(font-size) * 1.1667,
  zeta:        get(font-size) * 1,

  milli:       get(font-size) * 0.8333,
  micro:       get(font-size) * 0.75,

  line-height: 1.3,
  responsive: false,
), $gemini-headings);

/**
 * @module Headings
 * @description When we define a heading we also define a corresponding class to go with it.
 *
 * @modifier [.{heading}-medium] Apply this size on medium screens - set responsive to true
 * @modifier [.{heading}-large] Apply this size on large screens - set responsive to true
 *
 * @markup
    <h1>Heading 1</h1>
    <h2>Heading 2</h2>
    <h3>Heading 3</h3>
    <h4>Heading 4</h4>
    <h5>Heading 5</h5>
    <h6>Heading 6</h6>

    <h1 class="zeta">Heading 1</h1>
    <h2 class="epsilon">Heading 2</h2>
    <h3 class="delta">Heading 3</h3>
    <h4 class="gamma">Heading 4</h4>
    <h5 class="beta">Heading 5</h5>
    <h6 class="alpha">Heading 6</h6>
 */
$mapped-headings: (
  giga:    false,
  mega:    false,
  kilo:    false,

  alpha:   h1,
  beta:    h2,
  gamma:   h3,
  delta:   h4,
  epsilon: h5,
  zeta:    h6,

  milli:   false,
  micro:   false,
);

/**
 * Set line-heights
 */
%heading-line-height {
  line-height: get(line-height, $gemini-headings);
}

@each $class, $el in $mapped-headings {

  .#{$class},
  .#{$class}-medium,
  .#{$class}-large {
    @extend %heading-line-height;
  }

  #{$el} {
    font-size: get($class, $gemini-headings);
  }

  .#{$class} {
    font-size: get($class, $gemini-headings) !important;
  }

}

/**
 * Responsive helper declerations
 */
@if (get(responsive, $gemini-headings)) {
  // Medium screens
  @include media(medium) {

    @each $class, $el in $mapped-headings {

      .#{$class}-medium {
        font-size: get($class, $gemini-headings) !important;
      }

    }

  }

  // Large screens
  @include media(large){

    @each $class, $el in $mapped-headings {

      .#{$class}-large {
        font-size: get($class, $gemini-headings) !important;
      }

    }

  }
}

/**
 * @module Any Heading [.hN]
 * @description A general heading class to target any heading
 */

/**
 * @module Heading Group [.hgroup]
 * @description A group of headings
 *
 * @modifier [.hgroup--inline] Displays all headings to be inline-block
 *
 * @markup
    <div class="hgroup">
      <h2 class="hN">Heading 1</h2>
      <h3 class="hN">Heading 2</h3>
    </div>
    <div class="hgroup hgroup--inline">
      <h4 class="hN">Heading 3</h4>
      <h5 class="hN">Heading 4</h5>
    </div>
 */
.hN {
  hgroup &,
  .hgroup & {
    margin-bottom: 0;
  }

  .hgroup--inline {
    display: inline-block;
  }
}
