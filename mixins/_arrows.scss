/**
 ********************************
 * _ARROWS.SCSS
 ********************************
 */

/**
 * @settings $gemini-arrows
 * @description The settings for the arrows mixin
 *
 * @prop {measurement} [size=get(spacing) * 0.4] The size of the arrow
 * @prop {measurement} [border=2px] The width of the arrow border in pixels
 */
$gemini-arrows: () !default;

$gemini-arrows: extend((
  size: get(spacing) * 0.4,
  border: 2px,
), $gemini-arrows);

/**
 * @mixin arrow
 * @description This mixin creates a CSS arrow on a given element. We can have
 * the arrow appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * @param {string} [$arrow-edge] The edge that the arrow is on (top, right, bottom, left)
 * @param {string} [$arrow-location] The location placement along the edge (top, right, center, bottom, left)
 * @param {string} [$arrow-color] The color of the arrow
 * @param {string} [$border-color=$arrow-color] The color of the border
 *
 * @example
    .foo {
      @include arrow(bottom, center, red, black);
    }
 */

@mixin arrow($arrow-edge, $arrow-location, $arrow-color, $border-color: $arrow-color) {

  @if $arrow-edge == top {

    @extend %arrow--top;

    @if $border-color != false {
      &:before {
        border-bottom-color: $border-color !important;
      }
    }

    &:after {
      border-bottom-color: $arrow-color !important;
    }

    @if $arrow-location == left {
      @extend %arrow--left;
    }

    @if $arrow-location == center {
      @extend %arrow--center;
    }

    @if $arrow-location == right {
      @extend %arrow--right;
    }

  }

  @if $arrow-edge == right {

    @extend %arrow--far;

    @if $border-color != false {
      &:before {
        border-bottom-color: $border-color !important;
      }
    }

    &:after {
      border-left-color: $arrow-color !important;
    }

    @if $arrow-location == top {
      @extend %arrow--upper;
    }

    @if $arrow-location == center {
      @extend %arrow--middle;
    }

    @if $arrow-location == bottom {
      @extend %arrow--lower;
    }

  }

  @if $arrow-edge == bottom {

    @extend %arrow--bottom;

    &:before {
      border-top-color: $border-color !important;
    }

    &:after {
      border-top-color: $arrow-color !important;
    }

    @if $arrow-location == left {
      @extend %arrow--left;
    }

    @if $arrow-location == center {
      @extend %arrow--center;
    }

    @if $arrow-location == right {
      @extend %arrow--right;
    }

  }

  @if $arrow-edge == left {

    @extend %arrow--near;

    &:before {
      border-right-color: $border-color !important;
    }

    &:after {
      border-right-color: $arrow-color !important;
    }

    @if $arrow-location == top {
      @extend %arrow--upper;
    }

    @if $arrow-location == center {
      @extend %arrow--middle;
    }

    @if $arrow-location == bottom {
      @extend %arrow--lower;
    }

  }

}

/**
 * Forms the basis for any/all CSS arrows.
 */
%arrow {
  position: relative;

  &:before,
  &:after {
    content: "";
    position: absolute;
    border-collapse: separate;
  }
  &:before {
    border: get(size, $gemini-arrows) solid transparent;
  }
  &:after {
    border: get(size, $gemini-arrows) - get(border, $gemini-arrows) solid transparent;
  }
}


/**
* Define individual edges so we can combine what we need, when we need.
*/
%arrow--top {
  @extend %arrow;

  &:before,
  &:after {
    bottom: 100%;
  }
}

%arrow--upper {
  @extend %arrow;

  &:before {
    top: get(size, $gemini-arrows) - get(border, $gemini-arrows);
  }
  &:after {
    top: get(size, $gemini-arrows);
  }
}

%arrow--middle {
  @extend %arrow;

  &:before,
  &:after {
    top: 50%;
    margin-top: - get(size, $gemini-arrows);
  }
  &:after {
    margin-top: - get(size, $gemini-arrows) + get(border, $gemini-arrows);
  }
}

%arrow--lower {
  @extend %arrow;

  &:before {
    bottom: get(size, $gemini-arrows) - get(border, $gemini-arrows);
  }
  &:after {
    bottom: get(size, $gemini-arrows);
  }
}

%arrow--bottom {
  @extend %arrow;

  &:before,
  &:after {
    top: 100%;
  }
}

%arrow--near {
  @extend %arrow;

  &:before,
  &:after {
    right: 100%;
  }
}

%arrow--left {
  @extend %arrow;

  &:before {
    left: get(size, $gemini-arrows) - get(border, $gemini-arrows);
  }
  &:after {
    left: get(size, $gemini-arrows);
  }
}

%arrow--center {
  @extend %arrow;

  &:before,
  &:after {
    left: 50%;
    margin-left: - get(size, $gemini-arrows);
  }
  &:after {
    margin-left: - get(size, $gemini-arrows) + get(border, $gemini-arrows);
  }
}

%arrow--right {
  @extend %arrow;

  &:before {
    right: get(size, $gemini-arrows) - get(border, $gemini-arrows) + 10px;
  }
  &:after {
    right: get(size, $gemini-arrows) + 10px;
  }
}

%arrow--far {
  @extend %arrow;

  &:before,
  &:after {
    left: 100%;
  }
}
