/*------------------------------------*\
	$HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn't already have a class to which you could apply this
 * styling, e.g. if you need to float '.main-nav' left then add 'float:left;' to
 * that ruleset as opposed to adding the '.float--left' class to the markup.
 *
 * A lot of these classes carry '!important' as you will always want them to win
 * out over other selectors.
 */


/**
  * @module Float
  * @description Add/remove floats
  *
  * @modifier [.float--right] Float right
  * @modifier [.float--left] Float left
  * @modifier [.float--none] Clear floats
 **/
.float--right   { float:right!important; }
.float--left    { float:left !important; }
.float--none    { float:none !important; }


/**
  * @module Text Alignment
  * @description Easily align text
  *
  * @modifier [.align--left] Align left
  * @modifier [.align--center] Align center
  * @modifier [.align--right] Align right
 **/
.align--left     { text-align:left  !important; }
.align--center   { text-align:center!important; }
.align--right    { text-align:right !important; }
.align--bottom   { vertical-align: bottom !important; }

.display--inline          { display:inline !important; }
.display--block           { display:block !important; }
.display--inline-block    { display:inline-block !important; }


/**
  * @module Font Weights
  * @description Easily add font weights
  *
  * @modifier [.weight--light] Light
  * @modifier [.weight--normal] Normal
  * @modifier [.weight--semibold] Semibold
 **/
.weight--light      { font-weight:300!important; }
.weight--normal     { font-weight:400!important; }
.weight--semibold   { font-weight:600!important; }
.weight--bold       { font-weight:700!important; }
.weight--bolder     { font-weight:900!important; }

.line-height--half{ line-height:0.5!important; }
.line-height--double{ line-height:2!important; }
.line-height--triple{ line-height:3!important; }


/**
  * @module Block Pusher [.push]
  * @description Add base spacing as a margin around a block
  *
  * @modifier [.push--top] Add margin to top
  * @modifier [.push--right] Add margin to right
  * @modifier [.push--bottom] Add margin to bottom
  * @modifier [.push--left] Add margin to left
  * @modifier [.push--ends] Add margin to top and bottom
  * @modifier [.push--sides] Add margin to left and right
  * @modifier [.push-half] Add half margin
  * @modifier [.push-half--top] Add half margin to top
  * @modifier [.push-half--right] Add half margin to right
  * @modifier [.push-half--bottom] Add half margin to bottom
  * @modifier [.push-half--left] Add half margin to left
  * @modifier [.push-half--ends] Add half margin to top and bottom
  * @modifier [.push-half--sides] Add half margin to left and right
 **/
.push           { margin:       $base-spacing-unit!important; }
.push--top      { margin-top:   $base-spacing-unit!important; }
.push--right    { margin-right: $base-spacing-unit!important; }
.push--bottom   { margin-bottom:$base-spacing-unit!important; }
.push--left     { margin-left:  $base-spacing-unit!important; }
.push--ends     { margin-top:   $base-spacing-unit!important; margin-bottom:$base-spacing-unit!important; }
.push--sides    { margin-right: $base-spacing-unit!important; margin-left:  $base-spacing-unit!important; }

.push-half          { margin:       $half-spacing-unit!important; }
.push-half--top     { margin-top:   $half-spacing-unit!important; }
.push-half--right   { margin-right: $half-spacing-unit!important; }
.push-half--bottom  { margin-bottom:$half-spacing-unit!important; }
.push-half--left    { margin-left:  $half-spacing-unit!important; }
.push-half--ends    { margin-top:   $half-spacing-unit!important; margin-bottom:$half-spacing-unit!important; }
.push-half--sides   { margin-right: $half-spacing-unit!important; margin-left:  $half-spacing-unit!important; }

.push-double--bottom   { margin-bottom:$double-spacing-unit!important; }
.push-double--top      { margin-top:$double-spacing-unit!important; }

/**
  * @module Block Flusher [.flush]
  * @description Remove the margin around a block
  *
  * @modifier [.flush--top] Remove margin from top
  * @modifier [.flush--right] Remove margin from right
  * @modifier [.flush--bottom] Remove margin from bottom
  * @modifier [.flush--left] Remove margin from left
  * @modifier [.flush--ends] Remove margin from top and bottom
  * @modifier [.flush--sides] Remove margin from left and right
 **/
.flush          { margin:       0!important; }
.flush--top     { margin-top:   0!important; }
.flush--right   { margin-right: 0!important; }
.flush--bottom  { margin-bottom:0!important; }
.flush--left    { margin-left:  0!important; }
.flush--ends    { margin-top:   0!important; margin-bottom:0!important; }
.flush--sides   { margin-right: 0!important; margin-left:  0!important; }


/**
  * @module Bleed inner block [.flush]
  * @description Apply negative margins to bleed a child to the edge of the parent
  *
  * @modifier [.bleed] Negative margins on the sides
  * @modifier [.bleed-half] Half negative margins on the sides
 **/
.bleed{margin-right: -$base-spacing-unit!important; margin-left:  -$base-spacing-unit!important;}
.bleed-half{margin-right: -$half-spacing-unit!important; margin-left:  -$half-spacing-unit!important;}


/**
  * @module Block Softener [.soft]
  * @description Add base spacing as padding around a block
  *
  * @modifier [.soft--top] Add padding to top
  * @modifier [.soft--right] Add padding to right
  * @modifier [.soft--bottom] Add padding to bottom
  * @modifier [.soft--left] Add padding to left
  * @modifier [.soft--ends] Add padding to top and bottom
  * @modifier [.soft--sides] Add padding to left and right
  * @modifier [.soft-half] Add half padding
  * @modifier [.soft-half--top] Add half padding to top
  * @modifier [.soft-half--right] Add half padding to right
  * @modifier [.soft-half--bottom] Add half padding to bottom
  * @modifier [.soft-half--left] Add half padding to left
  * @modifier [.soft-half--ends] Add half padding to top and bottom
  * @modifier [.soft-half--sides] Add half padding to left and right
 **/
.soft           { padding:       $base-spacing-unit!important; }
.soft--top      { padding-top:   $base-spacing-unit!important; }
.soft--right    { padding-right: $base-spacing-unit!important; }
.soft--bottom   { padding-bottom:$base-spacing-unit!important; }
.soft--left     { padding-left:  $base-spacing-unit!important; }
.soft--ends     { padding-top:   $base-spacing-unit!important; padding-bottom:$base-spacing-unit!important; }
.soft--sides    { padding-right: $base-spacing-unit!important; padding-left:  $base-spacing-unit!important; }

.soft-half           { padding:       $half-spacing-unit!important; }
.soft-half--top      { padding-top:   $half-spacing-unit!important; }
.soft-half--right    { padding-right: $half-spacing-unit!important; }
.soft-half--bottom   { padding-bottom:$half-spacing-unit!important; }
.soft-half--left     { padding-left:  $half-spacing-unit!important; }
.soft-half--ends     { padding-top:   $half-spacing-unit!important; padding-bottom:$half-spacing-unit!important; }
.soft-half--sides    { padding-right: $half-spacing-unit!important; padding-left:  $half-spacing-unit!important; }

.soft-double{padding:$double-spacing-unit!important;}
.soft-double--ends{padding:$double-spacing-unit 0!important;}
.soft-double--right{padding-right:$double-spacing-unit!important;}

/**
  * @module Block Hardener [.hard]
  * @description Remove the padding around a block
  *
  * @modifier [.hard--top] Remove padding from top
  * @modifier [.hard--right] Remove padding from right
  * @modifier [.hard--bottom] Remove padding from bottom
  * @modifier [.hard--left] Remove padding from left
  * @modifier [.hard--ends] Remove padding from top and bottom
  * @modifier [.hard--sides] Remove padding from left and right
 **/
.hard           { padding:       0!important; }
.hard--top      { padding-top:   0!important; }
.hard--right    { padding-right: 0!important; }
.hard--bottom   { padding-bottom:0!important; }
.hard--left     { padding-left:  0!important; }
.hard--ends     { padding-top:   0!important; padding-bottom:0!important; }
.hard--sides    { padding-right: 0!important; padding-left:  0!important; }


/**
  * @module Informative [.informative]
  * @description Add a help cursor to any element that gives the user extra information on
  * ':hover'.
  *
  * @markup
  *   <span class="informative">Information on hover</span>
 **/
.informative{
	cursor:help!important;
}

/**
  * @module Clickable [.clickable]
  * @description Add a pointer cursor to any element to show that it's clickable
  *
  * @markup
  *   <span class="clickable">Clickable on hover</span>
 **/
.clickable{
  cursor:pointer!important;
}


/**
  * @module Muted [.muted]
  * @description Mute an object by reducing its opacity.
  *
  * @markup
  *   <img class="muted" src="http://www.placecage.com/c/200/200">
  *   <img class="muted-75" src="http://www.placecage.com/c/200/200">
 **/
.muted{
	opacity:0.5!important;
	filter:alpha(opacity = 50)!important;
}
  .muted-75{
    opacity:0.75!important;
    filter:alpha(opacity = 75)!important;
  }


/**
  * @module More [.more]
  * @description Add a right-angled quote to links that imply movement.
  *
  * @modifier [.more--button] Make a simple more button
  *
  * @markup
  *   <a href=# class="more">Read more</a>
  *
 **/
.more:after{
	content:"\00A0" "\00BB"!important;
}
	/**
	 * @example More Button
	 * @markup
	 *   <a href=# class="more more--button">Read more</a>
	**/
	.more--button{
		display:inline-block;
		padding-right:1em;
		padding-left:1em;
		background:$grey;
		color:$white;
	}

/**
  * @module Capitalize [.caps]
  * @description Apply capital case to an element (usually a 'strong').
 **/
.caps{
	text-transform:uppercase!important;
}

/**
  * @module Truncate Ellipsis [.truncate]
  * @description Truncate a fixed width string with an ellipsis
  *
  * @markup
  * <p style="width:250px;" class="truncate">This is a test for truncating.</p>
  */
.truncate{
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

/**
  * @module Rounded Corners [.round]
  * @description Round the corners as much as possible
  *
  * @markup
  * <input type="text" value="Rounded" class="round" />
  */
.round{
  @include border-radius($brand-round !important);
}

/**
  * @module Circled Corners [.circle]
  * @description Circle the corners as much as possible
  *
  * @markup
  * <input type="text" value="Circled" class="circle" />
  */
.circle{
  @include border-radius(999px!important);
}

/**
  * @module Full Width [.full]
  * @description Make something full width (100%)
  *
  *
  * @markup
  * <input type="text" value="Rounded" class="full" />
  */
.full{
  width:100%!important;
  // Min-width isn't supported well in IE8
  // Use defaults as appose to 100%
  max-width:none!important;
  min-width:0!important;
}

/**
  * @module Scroll Content [.scroll]
  * @description Make element scrollable on all devices
  */
.scroll{
  overflow:scroll;
  -webkit-overflow-scrolling:touch;
}

/*
 * Vertically Center
 *
 * http://css-tricks.com/centering-in-the-unknown/
 */
.center-this{
  text-align:center;
  &:before{
	content:'';
	display:inline-block;
	height:100%;
	vertical-align: middle;
	margin-right:-0.25em;
  }
}
.center-this__target{
  display: inline-block;
  vertical-align: middle;
  text-align:left;
}

/**
  * @module Unselectable [.unselectable]
  * @description Make it so that you can't highlight the text
  *
  * @markup
  *   <span class="unselectable">Can't select me >:)</span>
  */
.unselectable{
  @include vendor(user-select, none);
}

/**
  * @mixin accessibility
  * @description Hide content off-screen without resorting to 'display:none;'.
  *
  * @example
  *   .foo{
  *       @include accessibility;
  *   }
  */
@mixin accessibility{
	border:0!important;
	clip:rect(0 0 0 0)!important;
	height:1px!important;
	margin:-1px!important;
	overflow:hidden!important;
	padding:0!important;
	position: absolute!important;
	width:1px!important;
}

/**
  * @module Accessibility [.accessibility]
  * @description Hide content off-screen without resorting to 'display:none;'.
  *
  * @markup
  *   <p class="accessibility">This text is only seen by screen readers!</p>
  */
.a11y,
.accessibility{
	@include accessibility;
}
	@each $state in medium, large, xlarge{
		@include quick-media-query(#{$state}){
			.accessibility--#{$state}{
				@include accessibility;
			}
		}
	}

/**
  * @module GPU Rendering [%gpu]
  * @description A SASS helper to use the gpu on that element ( translateZ(0) )
  */
.gpu,
%gpu{
  @include vendor(transform, translateZ(0));
}

/**
  * @module Visibility Utilities
  * @description Helper classes to quickly show and hide elements based on screen size
  *
  * @modifier [.visible--small] Show on small, hide on medium and large
  * @modifier [.visible--medium] Show on medium, hide on small and large
  * @modifier [.visible--large] Show on large, hide on small and medium
  * @modifier [.hidden--small] Hide on small, show on medium and large
  * @modifier [.hidden--medium] Hide on medium, show on small and large
  * @modifier [.hidden--large] Hide on large, show on small and medium
  * @modifier [.visible--print] Show on print, hide on rest
  * @modifier [.hidden--large] Hide on print, show on rest
  *
  * @markup
  <ul class="block-list">
  	<li class="visible--small">.visible--small</li>
  	<li class="hidden--small">.hidden--small</li>
  	<li class="visible--medium">.visible--medium</li>
  	<li class="hidden--medium">.hidden--medium</li>
  	<li class="visible--large">.visible--large</li>
  	<li class="hidden--large">.hidden--large</li>
  </ul>
  */

%hide-small, .hidden{
  position: absolute !important;
  left: -9999px !important;
}

//For Javascript
.no-js .visible--js { @extend %hide-small; }
.yes-js .hidden--js { @extend %hide-small; }

// For small screens
.visible--small     { }
.hidden--small      { @extend %hide-small; }
.visible--medium    { @extend %hide-small; }
.hidden--medium     { }
.visible--large     { @extend %hide-small; }
.hidden--large      { }

// For medium screens
@include quick-media-query(medium, true){
  %hide-medium{
    position: absolute !important;
    left: -9999px !important;
  }
  %visible-medium{
    position: static !important;
    left: auto !important;
  }

  .visible--small  { @extend %hide-medium; }
  .hidden--small   { @extend %visible-medium }
  .visible--medium { @extend %visible-medium }
  .hidden--medium  { @extend %hide-medium; }
}

// For large screens
@include quick-media-query(large, true){
  %hide-large{
    position: absolute !important;
    left: -9999px !important;
  }
  %visible-large{
    position: static !important;
    left: auto !important;
  }

  .visible--medium { @extend %hide-large; }
  .hidden--medium  { @extend %visible-large; }
  .visible--large  { @extend %visible-large; }
  .hidden--large   { @extend %hide-large; }
}

// Print utilities
.visible--print    { @extend %hide-small; }
.hidden--print     { }

@media print {
  %hide-print{
    position: absolute !important;
    left: -9999px !important;
  }
  %visible-print{
    position: static !important;
    left: auto !important;
  }

  .visible--print  { @extend %visible-print; }
  .hidden--print   { @extend %hide-print; }
}
